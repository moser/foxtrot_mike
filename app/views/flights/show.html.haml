- if @dates
  .list{ :style => "display: none;" }
    = render :partial => "flights/list", :locals => { :flights => nil, :current_day => @flight.departure_date, :dates => @dates }
.item_container
  .item.inline_form_replace_context{ :id => @flight.id, :"data-departure_date" => @flight.departure_date, :"data-path" => flight_path(@flight) }
    %h1= @flight.class.l
    = link_to t('views.back'), "/flights/day/#{@flight.departure_date}",{:class => "sop back index"}
    %table.categories
      %tr
        %th= Flight.l(:data)
        %td
          %table.data.inline_form_hide_context
            %tr
              %th= Flight.l(:date)
              %td= l  @flight.departure_date
            %tr
              %th= Flight.l(:plane)
              %td
                - unless @flight.plane.nil?
                  = show_link(@flight.plane, @flight.plane.to_s, :class => "facebox")
                - else
                  = "-"
            %tr
              %th= Flight.l(:crew)
              %td
                - unless @flight.seat1.nil?
                  = @flight.seat1.link_to_value(self)
                  = "(#{@flight.seat1.short})" if @flight.seat1.person?
                  %br
                - unless @flight.seat2.nil?
                  = @flight.seat2.link_to_value(self)
                  = "(#{@flight.seat2.short})" if @flight.seat2.person?
            %tr
              %th= Flight.l(:from)
              %td= @flight.from || '-'
            %tr
              %th= Flight.l(:to)
              %td= @flight.to || '-'
            %tr
              %th= Flight.l(:departure)
              %td= l(@flight.departure, :format => :time)
            %tr
              %th= Flight.l(:arrival)
              %td= @flight.arrival.nil? ? '-' : l(@flight.arrival, :format => :time)
            %tr
              %th= Flight.l(:duration)
              %td= format_minutes(@flight.duration) || '-'
            - if @flight.plane && @flight.plane.engine_duration_possible?
              %tr
                %th= Flight.l(:engine_duration)
                %td= format_minutes(@flight.engine_duration) || '-'
            - unless @flight.is_a?(TowFlight)
              %tr
                %th= Flight.l(:cost_hint)
                %td= @flight.cost_hint
            %tr
              %th= Flight.l(:comment)
              %td= @flight.comment
            - if @flight.editable?
              %tr
                %td= edit_link(@flight, nil, {:class => "inline_form_show" })
              %tr
                %td= destroy_confirmation_link(@flight)
      - if TowFlight ===  @flight
        %tr
          %th= TowFlight.l(:towed_flight)
        %tr
          %td{ :colspan => 2 }
            .flight_format= render(:partial => "flights/title_spans")
            .flight_format
              = render(:partial => "flights/flight_spans", :locals => { :flight => @flight.abstract_flight })
      -  unless TowFlight ===  @flight
        %tr
          %th= Flight.l(:launch)
          %td= render(:partial => "launches/show", :locals => { :flight => @flight })
      - if @flight.problems_exist?
        - @flight.soft_validate #hack...
        %tr
          %th= Flight.l(:problems)
          %td.problems
            - @flight.problems.each do |key, v|
              .problem= t("soft_validation.flight.#{key.to_s}", v)
      - unless @flight.seat1.nil? || @flight.seat1.unknown?
        %tr
          %th
            = Flight.l(:cost)
          %td
            %table.data
              - if @flight.cost
                %tr
                  %th= FlightCostRule.l
                  %td= show_link(@flight.cost.cost_rule, @flight.cost.cost_rule.name, { :class => "facebox" })
                - @flight.cost.items.each do |i|
                  %tr
                    %td= i.cost_item.name
                    %td= i.financial_account || ""
                    %td= format_currency(i.value)
              - if @flight.launch_cost
                %tr
                  %th= @flight.launch_cost.cost_rule.class.l
                  %td= show_link(@flight.launch_cost.cost_rule, @flight.launch_cost.cost_rule.name, { :class => "facebox" })
                - @flight.launch_cost.items.each do |i|
                  %tr
                    %td= i.cost_item.name
                    %td= i.financial_account || ""
                    %td= format_currency(i.value)
              %tr
                %td= Flight.l(:cost_sum)
                %td
                %td= format_currency(@flight.cost_sum)
              %tr
                %td
                  %span{ :title => Flight.l(:free_cost_sum_hint) }= Flight.l(:free_cost_sum)
                %td
                %td= format_currency(@flight.free_cost_sum)
        - unless @flight.is_a?(TowFlight)
          %tr
            %th= Flight.l(:liabilities)
            %td
              = render :partial => "liabilities/list", :locals => { :flight => @flight }
    = link_to t('views.back'), "/flights/day/#{@flight.departure_date}",{:class => "sop back index"}
